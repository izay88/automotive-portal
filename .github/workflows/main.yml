name: Deploy

on: [push]

jobs:
  build:
    name: Deploy my app
    runs-on: ubuntu-latest
  
    
  deploy_to_production:
    runs-on: ubuntu-latest
    needs: build
    uses: actions/checkout@v1
    if: "contains(github.ref, 'master')"
    steps:
      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment prod
        with:
          token: '${{ github.token }}'
          environment: Production

      - name: Deploy my app
        run: |
          # add your deployment code here

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'failure'

  deploy_to_test:
    runs-on: ubuntu-latest
    needs: build
    uses: actions/checkout@v1
    if: "!contains(github.ref, 'master')"
    steps:
      - uses: chrnorm/deployment-action@v2
        name: Create GitHub testing deployment
        id: deployment test
        with:
          token: '${{ github.token }}'
          environment: Production

      - name: Deploy my app
        run: |
          # add your deployment code here

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'failure'
